generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Board {
  id            String @id @default(uuid())
  orgId         String
  title         String
  imageId       String
  imageThumbUrl String
  imageFullUrl  String
  imageLinkHTML String
  imageUserName String

  lists List[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model List {
  id    String @id @default(uuid())
  title String
  order Int

  boardId String
  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)

  cards Card[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@index([boardId])
}

model Card {
  id          String @id @default(uuid())
  title       String
  order       Int
  description String

  listId String
  list   List   @relation(fields: [listId], references: [id], onDelete: Cascade)

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@index([listId])
}

enum ACTION {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE {
  BOARD
  LIST
  CARD
}

model AuditLog {
  id          String      @id @default(uuid())
  orgId       String
  action      ACTION
  entityId    String
  entityType  ENTITY_TYPE
  entityTitle String
  userId      String
  userImage   String      @db.String
  userName    String      @db.String

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model OrgLimit {
  id        String   @id @default(uuid())
  orgId     String   @unique
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model OrgSubscription {
  id               String  @id @default(uuid())
  orgId            String  @unique
  stripeCustomerId String? @unique @map(name: "stripe_customer_id")
}
